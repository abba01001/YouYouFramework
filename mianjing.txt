使用递归写一个n的阶乘。
int RecursiveMultiply(int n)
{
    if (n == 1)
    {
        return 1;
    }
    else if (n < 1)
    {
        return 0;
    }
    else
    {
        return n * RecursiveMultiply(n - 1);
    }
}

反射的定义：可以在运行的时候用字符串的方式去动态创建类或者调用类

反射是一个什么样的机制，缺点是什么？
反射是一种在运行时检查、获取和操作程序结构的机制
性能开销（毕竟是运行时进行查找和检查）。安全性（可以直接访问私有属性和方法）。

il2cpp是什么？mono呢？ 编码技术。

il2cpp的流程  c#编译为中间语言（IL Intermediate Language），中间语言转换为C++，C++再编译为机器码

mono的流程  c#编译为中间语言（IL Intermediate Language，Mono 运行时（虚拟机）解释执行
在运行时，Mono 运行时环境会解释和执行这些 IL 代码。它提供了一个虚拟机（类似于 Java 虚拟机），负责将 IL 代码翻译成特定平台上的本地机器码。

总体来说，Mono 使用了即时编译（Just-In-Time Compilation，JIT）的方式，即在程序运行时将 IL 代码编译成本地机器码。这使得 C# 代码能够在不同平台上运行，而不需要预先为每个平台生成特定的本地机器码。
与之相反，IL2CPP 采用的是一种静态的编译方式，将 C# 代码在构建时直接编译为 C++ 代码，然后再编译成本地机器码。这种方式带来了一些性能上的优势，同时也增加了构建时间和二进制文件的大小。

使用IL2CPP的优势包括：
性能提升： 由于C++代码更接近底层，通常可以提供更好的性能。
跨平台支持： 生成的C++代码可以在多个平台上运行，而不需要重新编译。
代码保护： C++代码难以逆向工程，因此使用IL2CPP可以提高代码的安全性。
IL2CPP主要用于Unity项目的发布版本，而在编辑器中运行时通常使用Mono运行时


写过shader吗？顶点着色器与片元着色器都是干嘛的？
顶点着色器主要是将顶点从模型空间转换到裁剪空间里，然后进行一些计算啥的
片段着色器就是计算每个像素最终形成的颜色

lua中如何模拟一个继承？介绍__index和__newindex方法？

在 Lua 中，我们可以使用元表（metatable）来模拟继承。
元表中的 __index 元方法用于处理表中不存在的键的查找操作，而 __newindex 元方法则用于处理表中不存在的键的赋值操作

lua的垃圾回收是怎么样实现的?
垃圾回收是 Lua 用于管理内存的一种机制，通过自动检测和释放不再使用的内存，确保程序运行过程中不会出现内存泄漏的问题。
在 Lua 中，垃圾回收主要依赖于两种技术：引用计数和标记-清除。

lua的弱表是什么？介绍它的作用?
在 Lua 中，弱表是一种特殊的表，它使用弱引用来管理键和值。
弱引用意味着如果某个对象只在弱表中存在引用，而在其他地方没有强引用，那么这个对象可能会被垃圾回收机制自动移除，从而避免内存泄漏。
弱表主要用于灵活地管理对象的生命周期，特别是在对象被用作表的键或值时。

一般的内存优化是从纹理，模型，动画这些资源下手，
